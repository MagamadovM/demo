version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: demo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"        # если порт занят, поменяй слева на 5433:5432
    volumes:
      - db-data:/var/lib/postgresql/data
      # опционально: положишь SQL/скрипты и они выполнятся при первом старте
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # удобно иметь pgAdmin (веб‑UI) — опционально
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: demo-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

  zookeeper:
          image: confluentinc/cp-zookeeper:7.5.0
          container_name: demo-zookeeper
          restart: unless-stopped
          environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
          ports:
            - "2181:2181"

  kafka:
            image: confluentinc/cp-kafka:7.5.0
            container_name: demo-kafka
            restart: unless-stopped
            ports:
              - "9092:9092"
            environment:
              KAFKA_BROKER_ID: 1
              KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
              KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
              KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            depends_on:
              - zookeeper

volumes:
  db-data: